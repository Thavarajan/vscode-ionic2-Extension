{
	"Ionic list": {
		"prefix": "i2-list",
		"body": [
			"<ion-list>",
			"\t<ion-list-header>",
			"\t\t${1:Header}",
			"\t</ion-list-header>",
			"\t<ion-item>",
			"\t\t${2:Itemdetails}",
			"\t</ion-item>",
			"</ion-list>"
		],
		"description": "add a ionc list with header and item "
	},
	"Ionic group list": {
		"prefix": "i2-list-grp",
		"body": [
			"<ion-list>",
			"\t<ion-list-header>",
			"\t\t${1:Header}",
			"\t</ion-list-header>",
			"\t<ion-item-group>",
			"\t\t<ion-item>",
			"\t\t\t${2:Itemdetails}",
			"\t\t</ion-item>",
			"\t</ion-item-group>",
			"</ion-list>"
		],
		"description": "add a ionc list with header, group and item"
	},
	"Ionic group list with reorder": {
		"prefix": "i2-list-reord-grp",
		"body": [
			"<ion-list>",
			"\t<ion-list-header>",
			"\t\t${0:Header}",
			"\t</ion-list-header>",
			"\t<ion-item-group *ngFor='let ${1:group} of ${1:group}s' reorder='true' (ionItemReorder)='reorderItems(\\$event)'>",
			"\t\t<ion-item *ngFor='let ${2:item} of ${1:group}.items'>",
			"\t\t\t{{${2:item}}}",
			"\t\t</ion-item>",
			"\t</ion-item-group>",
			"</ion-list>"
		],
		"description": "add a ionic group with reorder and iterator"
	},
	"Ionic Item group": {
		"prefix": "i2-itm-grp",
		"body": [
			"<ion-item-group>",
			"\t<ion-item>",
			"\t\t${0:Itemdetails}",
			"\t</ion-item>",
			"</ion-item-group>"
		],
		"description": "use to add a group section with an item inside an ion list"
	},
	"Ionic slide Item": {
		"prefix": "i2-itm-slide",
		"body": [
			"<ion-item-sliding #slidingitem>",
			"\t<ion-item>",
			"\t\t${0:Itemdetails}",
			"\t</ion-item>",
			"<!-- slide left items down here -->",
			"\t<ion-item-options side='left'>",
			"\t\t<button (click)='${1:Favorite}(slidingitem)'>${1:Favorite}</button>",
			"\t</ion-item-options>",
			"<!-- slide right items down here -->",
			"\t<ion-item-options side='right'>",
			"\t\t<button (click)='${2:Unread}(slidingitem)'>${2:Unread}</button>",
			"\t</ion-item-options>",
			"</ion-item-sliding>"
		],
		"description": "Add a sliding item in the list use both side"
	},
	"Ionic Infinite Scroll": {
		"prefix": "i2-Infinite",
		"body": [
			"<!-- Add a method doInfinite -->",
			"<ion-infinite-scroll (ionInfinite)='doInfinite(\\$event)'>",
			"\t<ion-infinite-scroll-content></ion-infinite-scroll-content>",
			"</ion-infinite-scroll>"
		],
		"description": "Use this Snippet at the bottom of the list also look at the method create one to access it"
	},
	"Ionic Item with for": {
		"prefix": "i2-itm-for",
		"body": [
			"<ion-item *ngFor='let ${0:item} of ${0:item}s'>",
			"\t{{${0:item}}}",
			"</ion-item>"
		],
		"description": "Add a ion item to ion-list with for loop"
	},
	"Ionic Item with input": {
		"prefix": "i2-itm-input",
		"body": [
			"<ion-item>",
			"\t<ion-label ${1| ,floating,stacked,fixed|} >${2:Date}</ion-label>",
			"\t<ion-input type=\"${3|text,number,tel,search,email,url,password|}\" [(ngModel)]=\"${2:Date}\"></ion-input>",
			"</ion-item>"
		],
		"description": "Add a ion item to ion-list with inputs"
	},
	"Ionic date format": {
		"prefix": "i2-dtFormat",
		"body": [
			"<ion-datetime displayFormat=\"${0:DD/MM/YYYY} ${1:HH:mm:ss} ${2:A}\" pickerFormat=\"${3:DD MMMM YYYY} ${4:HH mm ss}\"></ion-datetime>"
		],
		"description": "Add a date format to the date field "
	},
	"Ionic Item": {
		"prefix": "i2-itm",
		"body": [
			"<ion-item>",
			"\t${0:Itemdetails}",
			"</ion-item>"
		],
		"description": "Add a ion item to ion-list"
	},
	"Ionic slider": {
		"prefix": "i2-carousel",
		"body": [
			"<ion-slides #islide ",
			"            [effect]= \"'${1|slide,fade,cube,coverflow,flip|}'\"",
			"            [pager]= \"'${2|true,false|}'\" [autoplay]= \"'${3:000}'\"",
			"            [loop]= \"'${4|true,false|}'\" [initialSlide]= \"'${5:0}'\"",
			"            [speed]= \"'${6:300}'\" [direction] = \"'${7|horizontal,vertical|}'\"",
			"            [paginationType] = \"'${8|bullets,fraction,progress|}'\"",
			"            (ionSlideWillChange)=\"${9:beforeSlideChange}(\\$event)\"",
			"            (ionSlideDidChange)=\"${10:afterSlideChange}(\\$event)\">",
			"        ",
			"\t<ion-slide>",
			"\t\t<h3>${11:Slide1}</h3>",
			"\t\t<p>${12:Detail}</p>",
			"\t</ion-slide>",
			"\t<ion-slide>",
			"\t\t<h3>${13:Slide2}</h3>",
			"\t\t<p>${14:Detail}</p>",
			"\t</ion-slide>",
			"\t<ion-slide>",
			"\t\t<h3>${15:Slide3}</h3>",
			"\t\t<p>${16:Detail}</p>",
			"\t</ion-slide>",
			"</ion-slides>"
		],
		"description": "Add a ionic slider  with some default slides and properties"
	},
	"Ionic Radio Group": {
		"prefix": "i2-radiogroup",
		"body": [
			"<${1:ion-list} radio-group [(ngModel)]=\"${2:selectedvalue}\">",
			"\t<${3:ion-item} *ngFor=\"let ${4:option} of ${4:option}s\">",
			"\t\t<ion-label>{{${4:option}.${5:text}}}</ion-label>",
			"\t\t<ion-radio value=\"{{${4:option}.value}}\"></ion-radio>",
			"\t</${3:ion-item}>",
			"</${1:ion-list}>"
		],
		"description": "Add a  Radio group with iterator"
	},
	"Ionic Search bar": {
		"prefix": "i2-search",
		"body": [
			"<ion-searchbar",
			"\t\tshowCancelButton=\"${1|true,false|}\"",
			"\t\tcancelButtonText=\"${2:cancel}\"",
			"\t\tdebounce =250",
			"\t\tplaceholder =\"Search ${3}\"",
			"\t\t[(ngModel)]=\"${4:searchval}\"",
			"\t\t(ionInput)=\"${5:searchItems()}\">",
			"</ion-searchbar>"
		],
		"description": "Add a searchbar"
	},
	"Ionic Range control": {
		"prefix": "i2-range",
		"body": [
			"<ion-range min=${1:0} max=${2:100} step=${3:1} snaps=\"${4|true,false|}\" pin=\"${5:true}\"",
			"           debounce=0 [(ngModel)]=\"${5:brightness}\">",
			"\t<ion-icon small range-left name=\"${6:sunny}\"></ion-icon>",
			"\t<ion-icon range-right name=\"${6:sunny}\"></ion-icon>",
			"</ion-range>"
		],
		"description": "Add a Range Control"
	},
	"Ionic fab button": {
		"prefix": "i2-fab-share",
		"body": [
			"<ion-fab ${1|right,left,center|} ${2|top,bottom,middle|}>",
			"\t<button ion-fab color=\"light\"><ion-icon name=\"${3:arrow-dropleft}\"></ion-icon></button>",
			"\t<ion-fab-list side=\"${4|top,bottom,left,right|}\">",
			"\t\t<button ion-fab (click)=\"share('fb')\"><ion-icon name=\"logo-facebook\"></ion-icon></button>",
			"\t\t<button ion-fab (click)=\"share('tw')\"><ion-icon name=\"logo-twitter\"></ion-icon></button>",
			"\t\t<button ion-fab (click)=\"share('vm')\"><ion-icon name=\"logo-vimeo\"></ion-icon></button>",
			"\t\t<button ion-fab (click)=\"share('gg')\"><ion-icon name=\"logo-googleplus\"></ion-icon></button>",
			"\t</ion-fab-list>",
			"</ion-fab>"
		],
		"description": "add a list of fab share option"
	},
	"Ionic tabs": {
		"prefix": "i2-tab",
		"body": [
			"<ion-tabs [selectedIndex]=\"'${1}'\" (ionChange)=\"${0:tabchange}(\\$event)\">",
			"\t<ion-tab [root]=\"${2}\" [tabTitle]=\"'${3:people}'\" [tabIcon]=\"'${4:contact}'\"></ion-tab>",
			"\t<ion-tab [root]=\"${5}\" [tabTitle]=\"'${6:favourite}'\" [tabIcon]=\"'${7:heart}'\"></ion-tab>",
			"</ion-tabs>"
		],
		"description": "add a list of tabs"
	}
}